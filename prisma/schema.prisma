// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id         String     @id @default(cuid())
  title      String     @unique
  author     Author     @relation(fields: [author_id], references: [id])
  author_id  String
  genre      Genre      @relation(fields: [genre_id], references: [id])
  genre_id   String
  user_books UserBook[]
}

model UserBook {
  id      String @id @default(cuid())
  book    Book   @relation(fields: [book_id], references: [id])
  book_id String
  user    User   @relation(fields: [user_id], references: [id])
  user_id String
  status  String
}

model Author {
  id         String @id @default(cuid())
  last_name  String
  first_name String
  books      Book[]

  @@unique([first_name, last_name])
}

model Genre {
  id    String @id @default(cuid())
  genre String @unique
  books Book[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  books         UserBook[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
